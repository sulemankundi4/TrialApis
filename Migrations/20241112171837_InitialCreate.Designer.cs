// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrialApis.Data;

#nullable disable

namespace TrialApis.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    [Migration("20241112171837_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("TrialApis.Models.Domains.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2f1e8a2-3c4b-4a1e-9f5b-1a2b3c4d5e6f"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7a8b-9c0d-1e2f3a4b5c6d"),
                            Name = "Moderate"
                        },
                        new
                        {
                            Id = new Guid("f1e2d3c4-b5a6-7e8f-9d0c-1b2a3c4d5e6f"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("TrialApis.Models.Domains.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2f1e8a2-3c4b-4a1e-9f5b-1a2b3c4d5e6f"),
                            Code = "NL",
                            Name = "Northland",
                            RegionImageUrl = "https://example.com/northland.jpg"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7a8b-9c0d-1e2f3a4b5c6d"),
                            Code = "AKL",
                            Name = "Auckland",
                            RegionImageUrl = "https://example.com/auckland.jpg"
                        },
                        new
                        {
                            Id = new Guid("f1e2d3c4-b5a6-7e8f-9d0c-1b2a3c4d5e6f"),
                            Code = "WKO",
                            Name = "Waikato",
                            RegionImageUrl = "https://example.com/waikato.jpg"
                        });
                });

            modelBuilder.Entity("TrialApis.Models.Domains.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("TrialApis.Models.Domains.Walk", b =>
                {
                    b.HasOne("TrialApis.Models.Domains.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrialApis.Models.Domains.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
